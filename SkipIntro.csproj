<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2A161D07-A8AC-4543-AA5B-2B5F7055911A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SkipIntro</RootNamespace>
    <AssemblyName>SkipIntro</AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\UnityModManager\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\Assembly-CSharp-firstpass.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI, Version=1.0.0.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityModManager">
      <HintPath>C:\Program Files (x86)\Steam\steamapps\common\mordheim\mordheim_Data\Managed\UnityModManager\UnityModManager.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Info.json" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  
  <!-- Post-build events -->
  <!-- Create zip package for both Debug and Release builds -->
  <Target Name="CreateZipPackage" AfterTargets="PostBuildEvent">
    <Message Text="Starting post-build zip packaging ($(Configuration))..." Importance="high" />
    <Exec Command="powershell.exe -ExecutionPolicy Bypass -File &quot;$(ProjectDir)Scripts\CreateRelease.ps1&quot; -ProjectDir &quot;$(ProjectDir.TrimEnd('\'))&quot; -OutputPath &quot;$(OutputPath.TrimEnd('\'))&quot; -Configuration &quot;$(Configuration)&quot;" 
          ContinueOnError="false" />
  </Target>
  
  <!-- Create GitHub release only for Release builds -->
  <Target Name="GitHubRelease" AfterTargets="CreateZipPackage" Condition="'$(Configuration)' == 'Release'">
    <Message Text="Creating GitHub release..." Importance="high" />
    <Exec Command="powershell.exe -ExecutionPolicy Bypass -File &quot;$(ProjectDir)Scripts\CreateGitHubRelease.ps1&quot; -ProjectDir &quot;$(ProjectDir.TrimEnd('\'))&quot;" 
          ContinueOnError="true" />
  </Target>
</Project>